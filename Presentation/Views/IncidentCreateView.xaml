<?xml version="1.0" encoding="utf-8"?>
<Page x:Class="OperationPrime.Presentation.Views.IncidentCreateView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:converters="using:OperationPrime.Presentation.Converters"
      xmlns:enums="using:OperationPrime.Domain.Enums"
      xmlns:controls="using:Microsoft.UI.Xaml.Controls"
      xmlns:viewmodels="using:OperationPrime.Presentation.ViewModels"
      x:DataType="viewmodels:IncidentCreateViewModel">

    <!-- Converters are registered globally in App.xaml -->

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WidthStates">
                <VisualState x:Name="Narrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="WizardCard.MaxWidth" Value="680"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Medium">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="900"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="WizardCard.MaxWidth" Value="960"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Wide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1200"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="WizardCard.MaxWidth" Value="1120"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header Section is not used (shell shows title/breadcrumb); keep collapsed -->
        <Grid x:Name="TopHeader" Grid.Row="0" Margin="{StaticResource SpacingXL}" Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
        </Grid>

        <!-- Step-Based Form Section: Centered Card Layout -->
        <ScrollViewer Grid.Row="1" Padding="{StaticResource SpacingXL}">
            <Grid HorizontalAlignment="Center">
                <Border x:Name="WizardCard"
                        MaxWidth="960"
                        Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                        CornerRadius="{StaticResource CardCornerRadius}"
                        BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                        BorderThickness="1"
                        Padding="{StaticResource SpacingXL}"
                        VerticalAlignment="Top">
                    <StackPanel Spacing="{StaticResource GapXL}">
                        <!-- In-card messages -->
                        <StackPanel Spacing="{StaticResource GapL}">
                            <InfoBar IsOpen="{x:Bind ViewModel.ErrorMessage, Converter={StaticResource StringToBoolConverter}, Mode=OneWay}"
                                     Severity="Error"
                                     Message="{x:Bind ViewModel.ErrorMessage, Mode=OneWay}"
                                     Visibility="{x:Bind ViewModel.ErrorMessage, Converter={StaticResource StringToVisibilityConverter}, Mode=OneWay}"/>
                            <InfoBar IsOpen="{x:Bind ViewModel.SuccessMessage, Converter={StaticResource StringToBoolConverter}, Mode=OneWay}"
                                     Severity="Success"
                                     Message="{x:Bind ViewModel.SuccessMessage, Mode=OneWay}"
                                     Visibility="{x:Bind ViewModel.SuccessMessage, Converter={StaticResource StringToVisibilityConverter}, Mode=OneWay}"/>
                        </StackPanel>

                        <!-- Step header with progress -->
                        <StackPanel Spacing="{StaticResource GapM}">
                            <TextBlock Text="{x:Bind ViewModel.CurrentStep, Mode=OneWay}"
                                       Visibility="Collapsed"/>
                            <TextBlock>
                                <Run Text="Step "/>
                                <Run Text="{x:Bind ViewModel.CurrentStep, Mode=OneWay}"/>
                                <Run Text=" of "/>
                                <Run Text="{x:Bind ViewModel.TotalSteps, Mode=OneWay}"/>
                            </TextBlock>
                            <ProgressBar Minimum="0"
                                         Maximum="{x:Bind ViewModel.TotalSteps, Mode=OneWay}"
                                         Value="{x:Bind ViewModel.CurrentStep, Mode=OneWay}"
                                         IsIndeterminate="False"/>
                        </StackPanel>

                        <!-- Steps content -->
                        <StackPanel Spacing="{StaticResource GapXL}">
                
                <!-- Step 1: Incident Type Selection -->
                <StackPanel Spacing="16" Visibility="{x:Bind ViewModel.IsStep1, Mode=OneWay}">
                    <TextBlock Text="Step 1: Incident Type Selection" 
                               Style="{StaticResource SubtitleTextBlockStyle}"
                               Margin="0,0,0,8"/>
                    
                    <StackPanel Spacing="8">
                        <TextBlock Text="Incident Type *" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                        <TextBlock Text="Select the type of incident to determine the workflow" 
                                   Style="{StaticResource CaptionTextBlockStyle}"
                                   Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                   Margin="0,0,0,8"/>
                        
                        <!-- Incident Type Button Group -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="16"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <!-- Pre-Incident Button -->
                            <Button Grid.Column="0"
                                    Command="{x:Bind ViewModel.SelectPreIncidentCommand}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    MinHeight="80"
                                    Padding="16">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                                        <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefaultBrush}"/>
                                        <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                    </Style>
                                </Button.Style>
                                <StackPanel Spacing="8" HorizontalAlignment="Center">
                                    <FontIcon Glyph="&#xE7C3;" FontSize="24" 
                                              Foreground="{ThemeResource AccentTextFillColorPrimaryBrush}"/>
                                    <TextBlock Text="Pre-Incident" 
                                               Style="{StaticResource BodyStrongTextBlockStyle}"
                                               HorizontalAlignment="Center"/>
                                    <TextBlock Text="Standard incident workflow" 
                                               Style="{StaticResource CaptionTextBlockStyle}"
                                               HorizontalAlignment="Center"
                                               TextWrapping="Wrap"
                                               Foreground="{ThemeResource TextFillColorSecondaryBrush}"/>
                                </StackPanel>
                            </Button>
                            
                            <!-- Major Incident Button -->
                            <Button Grid.Column="2"
                                    Command="{x:Bind ViewModel.SelectMajorIncidentCommand}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    MinHeight="80"
                                    Padding="16">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                                        <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefaultBrush}"/>
                                        <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                    </Style>
                                </Button.Style>
                                <StackPanel Spacing="8" HorizontalAlignment="Center">
                                    <FontIcon Glyph="&#xE7BA;" FontSize="24" 
                                              Foreground="{ThemeResource AccentTextFillColorPrimaryBrush}"/>
                                    <TextBlock Text="Major Incident" 
                                               Style="{StaticResource BodyStrongTextBlockStyle}"
                                               HorizontalAlignment="Center"/>
                                    <TextBlock Text="High-impact incident with business impact assessment" 
                                               Style="{StaticResource CaptionTextBlockStyle}"
                                               HorizontalAlignment="Center"
                                               TextWrapping="Wrap"
                                               Foreground="{ThemeResource TextFillColorSecondaryBrush}"/>
                                </StackPanel>
                            </Button>
                        </Grid>
                    </StackPanel>
                </StackPanel>

                <!-- Step 2: Basic Information (two-column structured layout) -->
                <StackPanel Spacing="24" Visibility="{x:Bind ViewModel.IsStep2, Mode=OneWay}">
                    <TextBlock Text="Assignment" 
                               Style="{StaticResource SubtitleTextBlockStyle}"/>

                    <!-- Row 1: Time fields -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Spacing="12">
                            <TextBlock Text="Time Issue Started *" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                            <DatePicker x:Name="TimeIssueStartedDatePicker"
                                        SelectedDateChanged="TimeIssueStartedDatePicker_SelectedDateChanged"
                                        HorizontalAlignment="Stretch"/>
                            <TimePicker x:Name="TimeIssueStartedTimePicker"
                                        MinuteIncrement="5"
                                        SelectedTimeChanged="TimeIssueStartedTimePicker_SelectedTimeChanged"
                                        HorizontalAlignment="Stretch"/>
                        </StackPanel>

                        <StackPanel Grid.Column="2" Spacing="12">
                            <TextBlock Text="Time Reported *" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                            <DatePicker x:Name="TimeReportedDatePicker"
                                        SelectedDateChanged="TimeReportedDatePicker_SelectedDateChanged"
                                        HorizontalAlignment="Stretch"/>
                            <TimePicker x:Name="TimeReportedTimePicker"
                                        MinuteIncrement="5"
                                        SelectedTimeChanged="TimeReportedTimePicker_SelectedTimeChanged"
                                        HorizontalAlignment="Stretch"/>
                        </StackPanel>
                    </Grid>

                    <!-- Row 2: Impacted Users + Application -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Spacing="8">
                            <TextBlock Text="Impacted Users *" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                            <ComboBox ItemsSource="{x:Bind ViewModel.AvailableImpactedUsersCounts, Mode=OneWay}"
                                      SelectedItem="{x:Bind ViewModel.SelectedImpactedUsersCount, Mode=TwoWay}"
                                      PlaceholderText="Select number of impacted users"
                                      HorizontalAlignment="Stretch">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate x:DataType="enums:ImpactedUsersCount">
                                        <TextBlock Text="{x:Bind Converter={StaticResource EnumDisplayNameConverter}}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>

                        <StackPanel Grid.Column="2" Spacing="8">
                            <TextBlock Text="Application Affected *" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                            <AutoSuggestBox x:Name="ApplicationAutoSuggestBox"
                                            Text="{x:Bind ViewModel.ApplicationAffected, Mode=TwoWay}"
                                            ItemsSource="{x:Bind ViewModel.AvailableApplications, Mode=OneWay}"
                                            DisplayMemberPath="Name"
                                            TextMemberPath="Name"
                                            PlaceholderText="Start typing to search applications..."
                                            QueryIcon="Find"
                                            MaxSuggestionListHeight="200"
                                            TextChanged="ApplicationAutoSuggestBox_TextChanged"
                                            SuggestionChosen="ApplicationAutoSuggestBox_SuggestionChosen"
                                            HorizontalAlignment="Stretch"/>
                        </StackPanel>
                    </Grid>

                    <!-- Row 3: Incident Source + Generating Multiple Calls -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Spacing="8">
                            <TextBlock Text="Incident Source *" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                            <ComboBox ItemsSource="{x:Bind ViewModel.AvailableIncidentSources, Mode=OneWay}"
                                      SelectedItem="{x:Bind ViewModel.IncidentSource, Mode=TwoWay}"
                                      PlaceholderText="Select source"
                                      HorizontalAlignment="Stretch">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate x:DataType="enums:IncidentSource">
                                        <TextBlock Text="{x:Bind Converter={StaticResource EnumDisplayNameConverter}}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>

                        <StackPanel Grid.Column="2" Spacing="8">
                            <TextBlock Text="Generating Multiple Calls *" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                            <ComboBox ItemsSource="{x:Bind ViewModel.AvailableGeneratingMultipleCallsOptions, Mode=OneWay}"
                                      SelectedItem="{x:Bind ViewModel.GeneratingMultipleCalls, Mode=TwoWay}"
                                      PlaceholderText="Select option"
                                      HorizontalAlignment="Stretch">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate x:DataType="enums:GeneratingMultipleCalls">
                                        <TextBlock Text="{x:Bind Converter={StaticResource EnumDisplayNameConverter}}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                    </Grid>

                    <!-- Full width: Locations & Workaround -->
                    <StackPanel Spacing="8">
                        <TextBlock Text="Locations Affected *" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                        <TextBox Text="{x:Bind ViewModel.LocationsAffected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 PlaceholderText="Geographic or organizational areas affected"
                                 MaxLength="300"
                                 HorizontalAlignment="Stretch"/>
                    </StackPanel>

                    <StackPanel Spacing="8">
                        <TextBlock Text="Workaround (Optional)" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                        <TextBox Text="{x:Bind ViewModel.Workaround, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 PlaceholderText="Describe any known workaround"
                                 AcceptsReturn="True"
                                 TextWrapping="Wrap"
                                 MinHeight="80"
                                 MaxLength="500"
                                 HorizontalAlignment="Stretch"/>
                    </StackPanel>
                </StackPanel>

                <!-- Step 3: Incident Details -->
                <StackPanel Spacing="16" Visibility="{x:Bind ViewModel.IsStep3, Mode=OneWay}">
                    <TextBlock Text="Step 3: Incident Details" 
                               Style="{StaticResource SubtitleTextBlockStyle}"
                               Margin="0,0,0,8"/>
                    
                    <!-- Incident Number -->
                    <StackPanel Spacing="8">
                        <TextBlock Text="Incident Number *" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                        <TextBox Text="{x:Bind ViewModel.IncidentNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 PlaceholderText="Enter the incident number"
                                 MaxLength="50"/>
                    </StackPanel>
                    
                    <!-- Title -->
                    <StackPanel Spacing="8">
                        <TextBlock Text="Title *" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                        <TextBox Text="{x:Bind ViewModel.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 PlaceholderText="Clear, concise incident summary"
                                 MaxLength="200"/>
                    </StackPanel>
                    
                    <!-- Description -->
                    <StackPanel Spacing="8">
                        <TextBlock Text="Description *" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                        <TextBox Text="{x:Bind ViewModel.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 PlaceholderText="Detailed explanation of the issue"
                                 AcceptsReturn="True"
                                 TextWrapping="Wrap"
                                 MinHeight="120"
                                 MaxHeight="200"
                                 MaxLength="2000"/>
                    </StackPanel>
                    
                    <!-- Urgency -->
                    <StackPanel Spacing="8">
                        <TextBlock Text="Urgency *" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                        <ComboBox SelectedIndex="{x:Bind ViewModel.UrgencyIndex, Mode=TwoWay}"
                                  HorizontalAlignment="Stretch">
                            <ComboBoxItem Content="1 - High"/>
                            <ComboBoxItem Content="2 - Medium"/>
                            <ComboBoxItem Content="3 - Low"/>
                        </ComboBox>
                    </StackPanel>
                </StackPanel>

                <!-- Step 4: Master Checklist (Major Incidents Only) -->
                <StackPanel Spacing="16" Visibility="{x:Bind ViewModel.IsStep4, Mode=OneWay}">
                    <TextBlock Text="Step 4: Master Checklist" 
                               Style="{StaticResource SubtitleTextBlockStyle}"
                               Margin="0,0,0,8"/>
                    
                    <InfoBar IsOpen="True" 
                             Severity="Informational"
                             Title="Major Incident Checklist"
                             Message="This step is required for Major Incidents to assess business impact."
                             IsClosable="False"/>
                    
                    <!-- Business Impact -->
                    <StackPanel Spacing="8">
                        <TextBlock Text="Business Impact *" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                        <TextBlock Text="What is it that users cannot do?" 
                                   Style="{StaticResource CaptionTextBlockStyle}"
                                   Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                   Margin="0,0,0,4"/>
                        <TextBox Text="{x:Bind ViewModel.BusinessImpact, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 PlaceholderText="Describe what users cannot do due to this incident"
                                 AcceptsReturn="True"
                                 TextWrapping="Wrap"
                                 MinHeight="100"
                                 MaxHeight="200"
                                 MaxLength="500"/>
                    </StackPanel>
                </StackPanel>

                        </StackPanel>

                        <!-- In-card Navigation Actions (shown after step 1) -->
                        <Grid Margin="0,8,0,0"
                              Visibility="{x:Bind ViewModel.CanGoPrevious, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0"
                                       Text="* Required fields"
                                       Style="{StaticResource CaptionTextBlockStyle}"
                                       Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                       VerticalAlignment="Center"/>
                            <StackPanel Grid.Column="1" Orientation="Horizontal" Spacing="12">
                                <Button Content="Back"
                                        Command="{x:Bind ViewModel.GoToPreviousStepCommand}"
                                        IsEnabled="{x:Bind ViewModel.CanGoPrevious, Mode=OneWay}"
                                        Style="{StaticResource DefaultButtonStyle}"
                                        MinWidth="80"/>
                                <Button Content="Reset"
                                        Command="{x:Bind ViewModel.ResetFormCommand}"
                                        Style="{StaticResource DefaultButtonStyle}"
                                        MinWidth="80"/>
                                <Button Content="Next"
                                        Command="{x:Bind ViewModel.GoToNextStepCommand}"
                                        IsEnabled="{x:Bind ViewModel.CanGoNext, Mode=OneWay}"
                                        Style="{StaticResource AccentButtonStyle}"
                                        MinWidth="96"
                                        Visibility="{x:Bind ViewModel.ShowNextButton, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                <Button Content="Create Incident"
                                        Command="{x:Bind ViewModel.CreateIncidentCommand}"
                                        Style="{StaticResource AccentButtonStyle}"
                                        MinWidth="120"
                                        Visibility="{x:Bind ViewModel.IsLastStep, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </Border>
            </Grid>
        </ScrollViewer>
        
    </Grid>
</Page>
